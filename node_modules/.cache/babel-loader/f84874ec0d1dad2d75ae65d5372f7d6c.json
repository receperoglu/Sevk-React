{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelector } from '../../../Styling';\nexport var SuggestionsItemGlobalClassNames = {\n  root: 'ms-Suggestions-item',\n  itemButton: 'ms-Suggestions-itemButton',\n  closeButton: 'ms-Suggestions-closeButton',\n  isSuggested: 'is-suggested'\n};\nexport function getStyles(props) {\n  var _a, _b, _c;\n\n  var className = props.className,\n      theme = props.theme,\n      suggested = props.suggested;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(SuggestionsItemGlobalClassNames, theme);\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      alignItems: 'stretch',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n      selectors: {\n        '&:hover': {\n          background: semanticColors.menuItemBackgroundHovered\n        },\n        '&:hover .ms-Suggestions-closeButton': {\n          display: 'block'\n        }\n      }\n    }, suggested && {\n      selectors: {\n        ':after': {\n          pointerEvents: 'none',\n          content: '\"\"',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n          border: \"1px solid \" + theme.semanticColors.focusBorder\n        }\n      }\n    }, className],\n    itemButton: [classNames.itemButton, {\n      width: '100%',\n      padding: 0,\n      border: 'none',\n      height: '100%',\n      // Force the item button to be collapsible so it can always shrink\n      // to accommodate the close button as a peer in its flex container.\n      minWidth: 0,\n      // Require for IE11 to truncate the component.\n      overflow: 'hidden',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'WindowText',\n        selectors: {\n          ':hover': {\n            background: 'Highlight',\n            color: 'HighlightText',\n            MsHighContrastAdjust: 'none'\n          }\n        }\n      }, _a[':hover'] = {\n        color: semanticColors.menuItemTextHovered\n      }, _a)\n    }, suggested && [classNames.isSuggested, {\n      background: semanticColors.menuItemBackgroundPressed,\n      selectors: (_b = {\n        ':hover': {\n          background: semanticColors.menuDivider\n        }\n      }, _b[HighContrastSelector] = {\n        background: 'Highlight',\n        color: 'HighlightText',\n        MsHighContrastAdjust: 'none'\n      }, _b)\n    }]],\n    closeButton: [classNames.closeButton, {\n      display: 'none',\n      color: palette.neutralSecondary,\n      padding: '0 4px',\n      height: 'auto',\n      width: 32,\n      selectors: (_c = {\n        ':hover, :active': {\n          background: palette.neutralTertiaryAlt,\n          color: palette.neutralDark\n        }\n      }, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, suggested && {\n      selectors: {\n        ':hover, :active': {\n          background: palette.neutralTertiary,\n          color: palette.neutralPrimary\n        }\n      }\n    }]\n  };\n}","map":null,"metadata":{},"sourceType":"module"}