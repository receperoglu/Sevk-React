{"ast":null,"code":"/**\n * {@docCategory Pickers}\n */\nvar SuggestionsController =\n/** @class */\nfunction () {\n  function SuggestionsController() {\n    var _this = this;\n\n    this._isSuggestionModel = function (value) {\n      return value.item !== undefined;\n    };\n\n    this._ensureSuggestionModel = function (suggestion) {\n      if (_this._isSuggestionModel(suggestion)) {\n        return suggestion;\n      } else {\n        return {\n          item: suggestion,\n          selected: false,\n          ariaLabel: suggestion.name || suggestion.primaryText\n        };\n      }\n    };\n\n    this.suggestions = [];\n    this.currentIndex = -1;\n  }\n\n  SuggestionsController.prototype.updateSuggestions = function (newSuggestions, selectedIndex) {\n    if (newSuggestions && newSuggestions.length > 0) {\n      this.suggestions = this.convertSuggestionsToSuggestionItems(newSuggestions);\n      this.currentIndex = selectedIndex ? selectedIndex : 0;\n\n      if (selectedIndex === -1) {\n        this.currentSuggestion = undefined;\n      } else if (selectedIndex !== undefined) {\n        this.suggestions[selectedIndex].selected = true;\n        this.currentSuggestion = this.suggestions[selectedIndex];\n      }\n    } else {\n      this.suggestions = [];\n      this.currentIndex = -1;\n      this.currentSuggestion = undefined;\n    }\n  };\n  /**\n   * Increments the suggestion index and gets the next suggestion in the list.\n   */\n\n\n  SuggestionsController.prototype.nextSuggestion = function () {\n    if (this.suggestions && this.suggestions.length) {\n      if (this.currentIndex < this.suggestions.length - 1) {\n        this.setSelectedSuggestion(this.currentIndex + 1);\n        return true;\n      } else if (this.currentIndex === this.suggestions.length - 1) {\n        this.setSelectedSuggestion(0);\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Decrements the suggestion index and gets the previous suggestion in the list.\n   */\n\n\n  SuggestionsController.prototype.previousSuggestion = function () {\n    if (this.suggestions && this.suggestions.length) {\n      if (this.currentIndex > 0) {\n        this.setSelectedSuggestion(this.currentIndex - 1);\n        return true;\n      } else if (this.currentIndex === 0) {\n        this.setSelectedSuggestion(this.suggestions.length - 1);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  SuggestionsController.prototype.getSuggestions = function () {\n    return this.suggestions;\n  };\n\n  SuggestionsController.prototype.getCurrentItem = function () {\n    return this.currentSuggestion;\n  };\n\n  SuggestionsController.prototype.getSuggestionAtIndex = function (index) {\n    return this.suggestions[index];\n  };\n\n  SuggestionsController.prototype.hasSelectedSuggestion = function () {\n    return this.currentSuggestion ? true : false;\n  };\n\n  SuggestionsController.prototype.removeSuggestion = function (index) {\n    this.suggestions.splice(index, 1);\n  };\n\n  SuggestionsController.prototype.createGenericSuggestion = function (itemToConvert) {\n    var itemToAdd = this.convertSuggestionsToSuggestionItems([itemToConvert])[0];\n    this.currentSuggestion = itemToAdd;\n  };\n\n  SuggestionsController.prototype.convertSuggestionsToSuggestionItems = function (suggestions) {\n    return Array.isArray(suggestions) ? suggestions.map(this._ensureSuggestionModel) : [];\n  };\n\n  SuggestionsController.prototype.deselectAllSuggestions = function () {\n    if (this.currentIndex > -1) {\n      this.suggestions[this.currentIndex].selected = false;\n      this.currentIndex = -1;\n    }\n  };\n\n  SuggestionsController.prototype.setSelectedSuggestion = function (index) {\n    if (index > this.suggestions.length - 1 || index < 0) {\n      this.currentIndex = 0;\n      this.currentSuggestion.selected = false;\n      this.currentSuggestion = this.suggestions[0];\n      this.currentSuggestion.selected = true;\n    } else {\n      if (this.currentIndex > -1) {\n        this.suggestions[this.currentIndex].selected = false;\n      }\n\n      this.suggestions[index].selected = true;\n      this.currentIndex = index;\n      this.currentSuggestion = this.suggestions[index];\n    }\n  };\n\n  return SuggestionsController;\n}();\n\nexport { SuggestionsController };","map":null,"metadata":{},"sourceType":"module"}