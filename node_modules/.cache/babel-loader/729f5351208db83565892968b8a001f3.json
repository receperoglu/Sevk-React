{"ast":null,"code":"import { extendComponent } from './extendComponent';\n/**\n * Generates a function to be attached to a React component, which can be called\n * as a replacement to RAF. In-flight async calls will be auto canceled if the component\n * is unmounting before the async code is executed, preventing bugs where code\n * accesses things within the component after being unmounted.\n */\n\nexport var safeRequestAnimationFrame = function safeRequestAnimationFrame(component) {\n  var activeTimeouts;\n  return function (cb) {\n    if (!activeTimeouts) {\n      activeTimeouts = new Set();\n      extendComponent(component, {\n        componentWillUnmount: function componentWillUnmount() {\n          activeTimeouts.forEach(function (id) {\n            return cancelAnimationFrame(id);\n          });\n        }\n      });\n    }\n\n    var timeoutId = requestAnimationFrame(function () {\n      activeTimeouts.delete(timeoutId);\n      cb();\n    });\n    activeTimeouts.add(timeoutId);\n  };\n};","map":null,"metadata":{},"sourceType":"module"}