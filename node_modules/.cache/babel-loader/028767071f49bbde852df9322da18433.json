{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef } from '../../../../Utilities';\nimport { ContextualMenu, DirectionalHint } from '../../../../ContextualMenu';\n\nvar SelectedItemWithContextMenu =\n/** @class */\nfunction (_super) {\n  __extends(SelectedItemWithContextMenu, _super);\n\n  function SelectedItemWithContextMenu(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.itemElement = React.createRef();\n\n    _this._onClick = function (ev) {\n      ev.preventDefault();\n\n      if (_this.props.beginEditing && !_this.props.item.isValid) {\n        _this.props.beginEditing(_this.props.item);\n      } else {\n        _this.setState({\n          contextualMenuVisible: true\n        });\n      }\n    };\n\n    _this._onCloseContextualMenu = function (ev) {\n      _this.setState({\n        contextualMenuVisible: false\n      });\n    };\n\n    initializeComponentRef(_this);\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  SelectedItemWithContextMenu.prototype.render = function () {\n    return React.createElement(\"div\", {\n      ref: this.itemElement,\n      onContextMenu: this._onClick\n    }, this.props.renderedItem, this.state.contextualMenuVisible ? React.createElement(ContextualMenu, {\n      items: this.props.menuItems,\n      shouldFocusOnMount: true,\n      target: this.itemElement.current,\n      onDismiss: this._onCloseContextualMenu,\n      directionalHint: DirectionalHint.bottomLeftEdge\n    }) : null);\n  };\n\n  return SelectedItemWithContextMenu;\n}(React.Component);\n\nexport { SelectedItemWithContextMenu };","map":null,"metadata":{},"sourceType":"module"}