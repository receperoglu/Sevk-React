{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warnDeprecations, classNamesFunction, divProperties, getInitials, getNativeProps, getRTL } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\nvar getClassNames = classNamesFunction({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\n\nvar PersonaCoinBase =\n/** @class */\nfunction (_super) {\n  __extends(PersonaCoinBase, _super);\n\n  function PersonaCoinBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderCoin = function (props) {\n      var _a = _this.props,\n          coinSize = _a.coinSize,\n          styles = _a.styles,\n          imageUrl = _a.imageUrl,\n          imageAlt = _a.imageAlt,\n          imageShouldFadeIn = _a.imageShouldFadeIn,\n          imageShouldStartVisible = _a.imageShouldStartVisible,\n          theme = _a.theme,\n          showUnknownPersonaCoin = _a.showUnknownPersonaCoin; // Render the Image component only if an image URL is provided\n\n      if (!imageUrl) {\n        return null;\n      }\n\n      var size = _this.props.size;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        size: size,\n        showUnknownPersonaCoin: showUnknownPersonaCoin\n      });\n      var dimension = coinSize || sizeToPixels[size];\n      return React.createElement(Image, {\n        className: classNames.image,\n        imageFit: ImageFit.cover,\n        src: imageUrl,\n        width: dimension,\n        height: dimension,\n        alt: imageAlt,\n        shouldFadeIn: imageShouldFadeIn,\n        shouldStartVisible: imageShouldStartVisible,\n        onLoadingStateChange: _this._onPhotoLoadingStateChange\n      });\n    };\n\n    _this._onRenderInitials = function (props) {\n      var imageInitials = props.imageInitials;\n      var allowPhoneInitials = props.allowPhoneInitials,\n          showUnknownPersonaCoin = props.showUnknownPersonaCoin;\n\n      if (showUnknownPersonaCoin) {\n        return React.createElement(Icon, {\n          iconName: \"Help\"\n        });\n      }\n\n      var isRTL = getRTL(_this.props.theme);\n      imageInitials = imageInitials || getInitials(_this._getText(), isRTL, allowPhoneInitials);\n      return imageInitials !== '' ? React.createElement(\"span\", null, imageInitials) : React.createElement(Icon, {\n        iconName: \"Contact\"\n      });\n    };\n\n    _this._onPhotoLoadingStateChange = function (loadState) {\n      _this.setState({\n        isImageLoaded: loadState === ImageLoadState.loaded,\n        isImageError: loadState === ImageLoadState.error\n      });\n\n      _this.props.onPhotoLoadingStateChange && _this.props.onPhotoLoadingStateChange(loadState);\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, {\n        primaryText: 'text'\n      });\n    }\n\n    _this.state = {\n      isImageLoaded: false,\n      isImageError: false\n    };\n    return _this;\n  }\n\n  PersonaCoinBase.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false\n      });\n    }\n  };\n\n  PersonaCoinBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        coinProps = _a.coinProps,\n        showUnknownPersonaCoin = _a.showUnknownPersonaCoin,\n        coinSize = _a.coinSize,\n        styles = _a.styles,\n        imageUrl = _a.imageUrl,\n        isOutOfOffice = _a.isOutOfOffice,\n\n    /* eslint-disable deprecation/deprecation */\n    _b = _a.onRenderCoin,\n\n    /* eslint-disable deprecation/deprecation */\n    onRenderCoin = _b === void 0 ? this._onRenderCoin : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? onRenderCoin : _c,\n\n    /* eslint-enable deprecation/deprecation */\n    _d = _a.onRenderInitials,\n\n    /* eslint-enable deprecation/deprecation */\n    onRenderInitials = _d === void 0 ? this._onRenderInitials : _d,\n        presence = _a.presence,\n        presenceTitle = _a.presenceTitle,\n        presenceColors = _a.presenceColors,\n        showInitialsUntilImageLoads = _a.showInitialsUntilImageLoads,\n        theme = _a.theme;\n    var size = this.props.size;\n    var divProps = getNativeProps(this.props, divProperties);\n    var divCoinProps = getNativeProps(coinProps || {}, divProperties);\n    var coinSizeStyle = coinSize ? {\n      width: coinSize,\n      height: coinSize\n    } : undefined;\n    var hideImage = showUnknownPersonaCoin;\n    var personaPresenceProps = {\n      coinSize: coinSize,\n      isOutOfOffice: isOutOfOffice,\n      presence: presence,\n      presenceTitle: presenceTitle,\n      presenceColors: presenceColors,\n      size: size,\n      theme: theme\n    }; // Use getStyles from props, or fall back to getStyles from styles file.\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size: size,\n      coinSize: coinSize,\n      showUnknownPersonaCoin: showUnknownPersonaCoin\n    });\n    var shouldRenderInitials = Boolean(!this.state.isImageLoaded && (showInitialsUntilImageLoads && imageUrl || !imageUrl || this.state.isImageError || hideImage));\n    return React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divProps, {\n      className: classNames.coin\n    }), // eslint-disable-next-line deprecation/deprecation\n    size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? React.createElement(\"div\", __assign({\n      role: \"presentation\"\n    }, divCoinProps, {\n      className: classNames.imageArea,\n      style: coinSizeStyle\n    }), shouldRenderInitials && React.createElement(\"div\", {\n      className: mergeStyles(classNames.initials, !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor(this.props)\n      }),\n      style: coinSizeStyle,\n      \"aria-hidden\": \"true\"\n    }, onRenderInitials(this.props, this._onRenderInitials)), !hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin), React.createElement(PersonaPresence, __assign({}, personaPresenceProps))) : // Otherwise, render just PersonaPresence.\n    this.props.presence ? React.createElement(PersonaPresence, __assign({}, personaPresenceProps)) : // Just render Contact Icon if there isn't a Presence prop.\n    React.createElement(Icon, {\n      iconName: \"Contact\",\n      className: classNames.size10WithoutPresenceIcon\n    }), this.props.children);\n  };\n  /**\n   * Deprecation helper for getting text.\n   */\n\n\n  PersonaCoinBase.prototype._getText = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  };\n\n  PersonaCoinBase.defaultProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n  return PersonaCoinBase;\n}(React.Component);\n\nexport { PersonaCoinBase };","map":null,"metadata":{},"sourceType":"module"}