{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { createMemoizer } from '../memoize';\n\nfunction createComposedComponent(outer) {\n  var Outer = outer;\n  var outerMemoizer = createMemoizer(function (inner) {\n    if (outer === inner) {\n      throw new Error('Attempted to compose a component with itself.');\n    }\n\n    var Inner = inner;\n    var innerMemoizer = createMemoizer(function (defaultRender) {\n      var InnerWithDefaultRender = function InnerWithDefaultRender(innerProps) {\n        return React.createElement(Inner, __assign({}, innerProps, {\n          defaultRender: defaultRender\n        }));\n      };\n\n      return InnerWithDefaultRender;\n    });\n\n    var OuterWithDefaultRender = function OuterWithDefaultRender(outerProps) {\n      var defaultRender = outerProps.defaultRender;\n      return React.createElement(Outer, __assign({}, outerProps, {\n        defaultRender: defaultRender ? innerMemoizer(defaultRender) : Inner\n      }));\n    };\n\n    return OuterWithDefaultRender;\n  });\n  return outerMemoizer;\n}\n\nvar componentAsMemoizer = createMemoizer(createComposedComponent);\n/**\n * Composes two components which conform to the `IComponentAs` specification; that is, two\n * components which accept a `defaultRender` prop, which is a 'default' implementation of\n * a component which accepts the same overall props.\n *\n * @public\n */\n\nexport function composeComponentAs(outer, inner) {\n  return componentAsMemoizer(outer)(inner);\n}","map":null,"metadata":{},"sourceType":"module"}