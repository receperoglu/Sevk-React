{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nimport { Position } from '../../utilities/positioning';\nexport var getClassNames = memoizeFunction(function (styles, disabled, isFocused, keyboardSpinDirection, labelPosition, className) {\n  if (labelPosition === void 0) {\n    labelPosition = Position.start;\n  }\n\n  if (className === void 0) {\n    className = undefined;\n  }\n\n  return {\n    root: mergeStyles(styles.root, className),\n    labelWrapper: mergeStyles(styles.labelWrapper, _getStyleForLabelBasedOnPosition(labelPosition, styles)),\n    icon: mergeStyles(styles.icon, disabled && styles.iconDisabled),\n    label: mergeStyles(styles.label),\n    spinButtonWrapper: mergeStyles(styles.spinButtonWrapper, _getStyleForRootBasedOnPosition(labelPosition, styles), !disabled && [{\n      selectors: {\n        ':hover': styles.spinButtonWrapperHovered\n      }\n    }, isFocused && {\n      // This is to increase the specificity of the focus styles\n      // and make it equal to that of the hover styles.\n      selectors: {\n        '&&': styles.spinButtonWrapperFocused\n      }\n    }], disabled && styles.spinButtonWrapperDisabled),\n    input: mergeStyles('ms-spinButton-input', styles.input, !disabled && {\n      selectors: {\n        '::selection': styles.inputTextSelected\n      }\n    }, disabled && styles.inputDisabled),\n    arrowBox: mergeStyles(styles.arrowButtonsContainer, disabled && styles.arrowButtonsContainerDisabled)\n  };\n});\n/**\n * Returns the Style corresponding to the label position\n */\n\nfunction _getStyleForLabelBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.start:\n      return styles.labelWrapperStart;\n\n    case Position.end:\n      return styles.labelWrapperEnd;\n\n    case Position.top:\n      return styles.labelWrapperTop;\n\n    case Position.bottom:\n      return styles.labelWrapperBottom;\n  }\n}\n/**\n * Returns the Style corresponding to the label position\n */\n\n\nfunction _getStyleForRootBasedOnPosition(labelPosition, styles) {\n  switch (labelPosition) {\n    case Position.top:\n    case Position.bottom:\n      return styles.spinButtonWrapperTopBottom;\n\n    default:\n      return {};\n  }\n}","map":null,"metadata":{},"sourceType":"module"}