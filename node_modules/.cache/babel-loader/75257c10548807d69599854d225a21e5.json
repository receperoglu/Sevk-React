{"ast":null,"code":"import { find } from '../../Utilities';\n/**\n * Tests for equality between two IKeytipTransitionKeys.\n *\n * @param key1 - First IKeytipTransitionKey.\n * @param key2 - Second IKeytipTransitionKey.\n * @returns T/F if the transition keys are equal.\n */\n\nexport function transitionKeysAreEqual(key1, key2) {\n  if (key1.key !== key2.key) {\n    return false;\n  }\n\n  var mod1 = key1.modifierKeys;\n  var mod2 = key2.modifierKeys;\n\n  if (!mod1 && mod2 || mod1 && !mod2) {\n    // Not equal if one modifier is defined and the other isn't\n    return false;\n  }\n\n  if (mod1 && mod2) {\n    if (mod1.length !== mod2.length) {\n      return false;\n    } // Sort both arrays\n\n\n    mod1 = mod1.sort();\n    mod2 = mod2.sort();\n\n    for (var i = 0; i < mod1.length; i++) {\n      if (mod1[i] !== mod2[i]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Tests if 'key' is present in 'keys'.\n *\n * @param keys - Array of IKeytipTransitionKey.\n * @param key - IKeytipTransitionKey to find in 'keys'.\n * @returns T/F if 'keys' contains 'key'.\n */\n\nexport function transitionKeysContain(keys, key) {\n  return !!find(keys, function (transitionKey) {\n    return transitionKeysAreEqual(transitionKey, key);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}