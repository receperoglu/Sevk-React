{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { Link } from '../../Link';\nimport { classNamesFunction, css, initializeComponentRef } from '../../Utilities';\nvar LIST_ITEM_COUNT = 3;\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardPreviewBase =\n/** @class */\nfunction (_super) {\n  __extends(DocumentCardPreviewBase, _super);\n\n  function DocumentCardPreviewBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._renderPreviewList = function (previewImages) {\n      var getOverflowDocumentCountText = _this.props.getOverflowDocumentCountText; // Determine how many documents we won't be showing\n\n      var overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT; // Determine the overflow text that will be rendered after the preview list.\n\n      var overflowText = overflowDocumentCount ? getOverflowDocumentCountText ? getOverflowDocumentCountText(overflowDocumentCount) : '+' + overflowDocumentCount : null; // Create list items for the documents to be shown\n\n      var fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map(function (file, fileIndex) {\n        return React.createElement(\"li\", {\n          key: fileIndex\n        }, React.createElement(Image, {\n          className: _this._classNames.fileListIcon,\n          src: file.iconSrc,\n          role: \"presentation\",\n          alt: \"\",\n          width: \"16px\",\n          height: \"16px\"\n        }), React.createElement(Link, __assign({\n          className: _this._classNames.fileListLink\n        }, (file.linkProps, {\n          href: file.linkProps && file.linkProps.href || file.url\n        })), file.name));\n      });\n      return React.createElement(\"div\", null, React.createElement(\"ul\", {\n        className: _this._classNames.fileList\n      }, fileListItems), overflowText && React.createElement(\"span\", {\n        className: _this._classNames.fileListOverflowText\n      }, overflowText));\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  DocumentCardPreviewBase.prototype.render = function () {\n    var _a = this.props,\n        previewImages = _a.previewImages,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    var style;\n    var preview;\n    var isFileList = previewImages.length > 1;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isFileList: isFileList\n    });\n\n    if (previewImages.length > 1) {\n      // Render a list of files\n      preview = this._renderPreviewList(previewImages);\n    } else if (previewImages.length === 1) {\n      // Render a single preview\n      preview = this._renderPreviewImage(previewImages[0]); // Override the border color if an accent color was provided\n\n      /* eslint-disable deprecation/deprecation */\n\n      if (previewImages[0].accentColor) {\n        style = {\n          borderBottomColor: previewImages[0].accentColor\n        };\n      }\n      /* eslint-enable deprecation/deprecation */\n\n    }\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root,\n      style: style\n    }, preview);\n  };\n\n  DocumentCardPreviewBase.prototype._renderPreviewImage = function (previewImage) {\n    var width = previewImage.width,\n        height = previewImage.height,\n        imageFit = previewImage.imageFit,\n        previewIconProps = previewImage.previewIconProps,\n        previewIconContainerClass = previewImage.previewIconContainerClass;\n\n    if (previewIconProps) {\n      return React.createElement(\"div\", {\n        className: css(this._classNames.previewIcon, previewIconContainerClass),\n        style: {\n          width: width,\n          height: height\n        }\n      }, React.createElement(Icon, __assign({}, previewIconProps)));\n    }\n\n    var image = React.createElement(Image, {\n      width: width,\n      height: height,\n      imageFit: imageFit,\n      src: previewImage.previewImageSrc,\n      role: \"presentation\",\n      alt: \"\"\n    });\n    var icon;\n\n    if (previewImage.iconSrc) {\n      icon = React.createElement(Image, {\n        className: this._classNames.icon,\n        src: previewImage.iconSrc,\n        role: \"presentation\",\n        alt: \"\"\n      });\n    }\n\n    return React.createElement(\"div\", null, image, icon);\n  };\n\n  return DocumentCardPreviewBase;\n}(React.Component);\n\nexport { DocumentCardPreviewBase };","map":null,"metadata":{},"sourceType":"module"}