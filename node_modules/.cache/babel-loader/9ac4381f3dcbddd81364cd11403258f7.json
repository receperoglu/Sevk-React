{"ast":null,"code":"import { PersonaInitialsColor } from './Persona.types';\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\n\nvar COLOR_SWATCHES_LOOKUP = [PersonaInitialsColor.lightBlue, PersonaInitialsColor.blue, PersonaInitialsColor.darkBlue, PersonaInitialsColor.teal, PersonaInitialsColor.green, PersonaInitialsColor.darkGreen, PersonaInitialsColor.lightPink, PersonaInitialsColor.pink, PersonaInitialsColor.magenta, PersonaInitialsColor.purple, PersonaInitialsColor.orange, PersonaInitialsColor.lightRed, PersonaInitialsColor.darkRed, PersonaInitialsColor.violet, PersonaInitialsColor.gold, PersonaInitialsColor.burgundy, PersonaInitialsColor.warmGray, PersonaInitialsColor.cyan, PersonaInitialsColor.rust, PersonaInitialsColor.coolGray];\nvar COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName) {\n  var color = PersonaInitialsColor.blue;\n\n  if (!displayName) {\n    return color;\n  }\n\n  var hashCode = 0;\n\n  for (var iLen = displayName.length - 1; iLen >= 0; iLen--) {\n    var ch = displayName.charCodeAt(iLen);\n    var shift = iLen % 8; // eslint-disable-next-line no-bitwise\n\n    hashCode ^= (ch << shift) + (ch >> 8 - shift);\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor) {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#4F6BED';\n\n    case PersonaInitialsColor.blue:\n      return '#0078D4';\n\n    case PersonaInitialsColor.darkBlue:\n      return '#004E8C';\n\n    case PersonaInitialsColor.teal:\n      return '#038387';\n\n    case PersonaInitialsColor.lightGreen:\n    case PersonaInitialsColor.green:\n      return '#498205';\n\n    case PersonaInitialsColor.darkGreen:\n      return '#0B6A0B';\n\n    case PersonaInitialsColor.lightPink:\n      return '#C239B3';\n\n    case PersonaInitialsColor.pink:\n      return '#E3008C';\n\n    case PersonaInitialsColor.magenta:\n      return '#881798';\n\n    case PersonaInitialsColor.purple:\n      return '#5C2E91';\n\n    case PersonaInitialsColor.orange:\n      return '#CA5010';\n    // eslint-disable-next-line deprecation/deprecation\n\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n\n    case PersonaInitialsColor.lightRed:\n      return '#D13438';\n\n    case PersonaInitialsColor.darkRed:\n      return '#A4262C';\n\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n\n    case PersonaInitialsColor.violet:\n      return '#8764B8';\n\n    case PersonaInitialsColor.gold:\n      return '#986F0B';\n\n    case PersonaInitialsColor.burgundy:\n      return '#750B1C';\n\n    case PersonaInitialsColor.warmGray:\n      return '#7A7574';\n\n    case PersonaInitialsColor.cyan:\n      return '#005B70';\n\n    case PersonaInitialsColor.rust:\n      return '#8E562E';\n\n    case PersonaInitialsColor.coolGray:\n      return '#69797E';\n    // eslint-disable-next-line deprecation/deprecation\n\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n\n    case PersonaInitialsColor.gray:\n      return '#393939';\n  }\n}\n/** @deprecated Use `getPersonaInitialsColor` */\n\n\nexport function initialsColorPropToColorCode(props) {\n  return getPersonaInitialsColor(props);\n}\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\n\nexport function getPersonaInitialsColor(props) {\n  // eslint-disable-next-line deprecation/deprecation\n  var primaryText = props.primaryText,\n      text = props.text;\n  var initialsColor = props.initialsColor;\n  var initialsColorCode;\n\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}","map":null,"metadata":{},"sourceType":"module"}