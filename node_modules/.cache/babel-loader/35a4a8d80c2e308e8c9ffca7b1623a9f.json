{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, getId, initializeComponentRef } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './ExtendedSelectedItem.scss';\nvar styles = stylesImport;\n\nvar ExtendedSelectedItem =\n/** @class */\nfunction (_super) {\n  __extends(ExtendedSelectedItem, _super);\n\n  function ExtendedSelectedItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.persona = React.createRef();\n    initializeComponentRef(_this); // eslint-disable-next-line react/no-unused-state\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  ExtendedSelectedItem.prototype.render = function () {\n    var _a, _b;\n\n    var _c = this.props,\n        item = _c.item,\n        onExpandItem = _c.onExpandItem,\n        onRemoveItem = _c.onRemoveItem,\n        removeButtonAriaLabel = _c.removeButtonAriaLabel,\n        index = _c.index,\n        selected = _c.selected;\n    var itemId = getId();\n    return React.createElement(\"div\", {\n      ref: this.persona,\n      className: css('ms-PickerPersona-container', styles.personaContainer, (_a = {}, _a['is-selected ' + styles.personaContainerIsSelected] = selected, _a), (_b = {}, _b['is-invalid ' + styles.validationError] = !item.isValid, _b)),\n      \"data-is-focusable\": true,\n      \"data-is-sub-focuszone\": true,\n      \"data-selection-index\": index,\n      role: 'listitem',\n      \"aria-labelledby\": 'selectedItemPersona-' + itemId\n    }, React.createElement(\"div\", {\n      hidden: !item.canExpand || onExpandItem === undefined\n    }, React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onExpandItem),\n      iconProps: {\n        iconName: 'Add',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.expandButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })), React.createElement(\"div\", {\n      className: css(styles.personaWrapper)\n    }, React.createElement(\"div\", {\n      className: css('ms-PickerItem-content', styles.itemContent),\n      id: 'selectedItemPersona-' + itemId\n    }, React.createElement(Persona, __assign({}, item, {\n      onRenderCoin: this.props.renderPersonaCoin,\n      onRenderPrimaryText: this.props.renderPrimaryText,\n      size: PersonaSize.size32\n    }))), React.createElement(IconButton, {\n      onClick: this._onClickIconButton(onRemoveItem),\n      iconProps: {\n        iconName: 'Cancel',\n        style: {\n          fontSize: '14px'\n        }\n      },\n      className: css('ms-PickerItem-removeButton', styles.removeButton, styles.actionButton),\n      ariaLabel: removeButtonAriaLabel\n    })));\n  };\n\n  ExtendedSelectedItem.prototype._onClickIconButton = function (action) {\n    return function (ev) {\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      if (action) {\n        action();\n      }\n    };\n  };\n\n  return ExtendedSelectedItem;\n}(React.Component);\n\nexport { ExtendedSelectedItem };","map":null,"metadata":{},"sourceType":"module"}