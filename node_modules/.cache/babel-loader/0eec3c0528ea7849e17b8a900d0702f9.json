{"ast":null,"code":"import _regeneratorRuntime from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/recep/Downloads/react-data-patterns-demo-master/src/components/ArticelsTable.js\";\nimport React, { Component } from 'react';\nimport '../css/Table.css';\nvar USER_SERVICE_URL = 'StartApi.ashx?Platform=Android&ProcessType=';\n\nvar ArticelsTable = /*#__PURE__*/function (_Component) {\n  _inherits(ArticelsTable, _Component);\n\n  function ArticelsTable(props) {\n    var _this;\n\n    _classCallCheck(this, ArticelsTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArticelsTable).call(this, props));\n    _this.fetcharticels = _this.fetcharticelsAsync;\n    _this.state = {\n      isFetching: false,\n      articels: []\n    };\n    _this.GetOrders = _this.GetOrders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ArticelsTable, [{\n    key: \"GetOrders\",\n    value: function () {\n      var _GetOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ArticelId) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(USER_SERVICE_URL + \"Articels&ArticelId=\" + ArticelId, {\n                  method: \"POST\",\n                  cache: \"no-cache\",\n                  mode: \"cors\",\n                  headers: {\n                    'Content-Type': 'application/json',\n                    \"access-control-allow-credentials\": false,\n                    \"Access-Control-Allow-Origin\": USER_SERVICE_URL + \"Articels&ArticelId=\" + ArticelId,\n                    \"Authorization\": \"bearer \"\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.t0 = this;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  articels: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function GetOrders(_x) {\n        return _GetOrders.apply(this, arguments);\n      }\n\n      return GetOrders;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-hover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"alert alert-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        tabindex: \"0\",\n        className: \"tablesorter-header tablesorter-unsorted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, \"Firma\"), /*#__PURE__*/React.createElement(\"td\", {\n        tabindex: \"0\",\n        className: \"tablesorter-header tablesorter-unsorted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Articel / Sipari\\u015F\"), /*#__PURE__*/React.createElement(\"td\", {\n        tabindex: \"0\",\n        className: \"tablesorter-header tablesorter-unsorted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, \"Tarih\"), /*#__PURE__*/React.createElement(\"td\", {\n        tabindex: \"0\",\n        className: \"tablesorter-header tablesorter-unsorted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"#\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, this.state.articels.map(function (articels) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: articels.id,\n          \"data-id\": articels.id,\n          className: \"Claim Detail \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, articels.CustomerName), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, articels.ArticelName), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          onClick: _this2.GetOrders(articels.id),\n          className: \"Icon css-43 SearchIcon \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        })), \" \");\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetcharticels();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }, {\n    key: \"fetcharticelsAsync\",\n    value: function () {\n      var _fetcharticelsAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(USER_SERVICE_URL + \"Articels\", {\n                  method: \"POST\",\n                  cache: \"no-cache\",\n                  mode: \"cors\",\n                  headers: {\n                    'Content-Type': 'application/json',\n                    \"access-control-allow-credentials\": false,\n                    \"Access-Control-Allow-Origin\": USER_SERVICE_URL + \"Articels\",\n                    \"Authorization\": \"bearer \"\n                  }\n                });\n\n              case 2:\n                response = _context2.sent;\n                _context2.t0 = this;\n                _context2.next = 6;\n                return response.json();\n\n              case 6:\n                _context2.t1 = _context2.sent;\n                _context2.t2 = {\n                  articels: _context2.t1\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetcharticelsAsync() {\n        return _fetcharticelsAsync.apply(this, arguments);\n      }\n\n      return fetcharticelsAsync;\n    }()\n  }]);\n\n  return ArticelsTable;\n}(Component);\n\nexport default ArticelsTable;","map":{"version":3,"sources":["/Users/recep/Downloads/react-data-patterns-demo-master/src/components/ArticelsTable.js"],"names":["React","Component","USER_SERVICE_URL","ArticelsTable","props","fetcharticels","fetcharticelsAsync","state","isFetching","articels","GetOrders","bind","ArticelId","fetch","method","cache","mode","headers","response","json","setState","map","id","CustomerName","ArticelName","clearInterval","timer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport '../css/Table.css'\n  \n\nconst USER_SERVICE_URL = 'StartApi.ashx?Platform=Android&ProcessType=';\n \n\n\nclass ArticelsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n            articels: []\n           \n\n        };\n        this.GetOrders = this.GetOrders.bind(this)\n    }\n\n     async GetOrders(ArticelId) {\n\n        \n        const response = await fetch(USER_SERVICE_URL+\"Articels&ArticelId=\"+ArticelId, {\n            method: \"POST\",\n            cache: \"no-cache\",\n            mode: \"cors\",\n            headers: {\n                'Content-Type': 'application/json',    \n                \"access-control-allow-credentials\": false,\n                \"Access-Control-Allow-Origin\":USER_SERVICE_URL+\"Articels&ArticelId=\"+ArticelId,\n                \"Authorization\": \"bearer \"\n            },\n        });\n        this.setState({ articels: await response.json() });\n        \n    }\n\n    render() {\n        return (\n            \n            <table className=\"table table-hover\">\n            <thead>\n            <tr className=\"alert alert-success\">\n                        <td tabindex=\"0\" className=\"tablesorter-header tablesorter-unsorted\">Firma</td>\n                        <td tabindex=\"0\" className=\"tablesorter-header tablesorter-unsorted\">Articel / Sipariş</td>\n                        <td tabindex=\"0\" className=\"tablesorter-header tablesorter-unsorted\">Tarih</td>\n                        <td tabindex=\"0\" className=\"tablesorter-header tablesorter-unsorted\">#</td>\n                    </tr>\n            </thead>\n            <tbody>\n                {this.state.articels.map(articels =>\n                    <tr key={articels.id} data-id={articels.id}   className=\"Claim Detail \">\n                        <td>{articels.CustomerName}</td>\n                        <td>{articels.ArticelName}</td>\n                        <td><i  onClick={this.GetOrders(articels.id)} className=\"Icon css-43 SearchIcon \"></i></td> </tr>)}\n            </tbody>\n        </table>\n                \n        )\n    }\n\n    componentDidMount() {\n        this.fetcharticels();\n \n        \n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n \n    async fetcharticelsAsync() {\n      \n        const response = await fetch(USER_SERVICE_URL+\"Articels\", {\n            method: \"POST\",\n            cache: \"no-cache\",\n            mode: \"cors\",\n            headers: {\n                'Content-Type': 'application/json',    \n                \"access-control-allow-credentials\": false,\n                \"Access-Control-Allow-Origin\":USER_SERVICE_URL+\"Articels\",\n                \"Authorization\": \"bearer \"\n            },\n        });\n        this.setState({ articels: await response.json() });\n\n\n    };\n   \n    fetcharticels = this.fetcharticelsAsync;\n}\n\nexport default ArticelsTable\n"]},"metadata":{},"sourceType":"module"}