{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { initializeComponentRef, classNamesFunction } from '../../Utilities';\nimport { TeachingBubbleContent } from './TeachingBubbleContent';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nvar getClassNames = classNamesFunction();\n\nvar TeachingBubbleBase =\n/** @class */\nfunction (_super) {\n  __extends(TeachingBubbleBase, _super); // Constructor\n\n\n  function TeachingBubbleBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.rootElement = React.createRef();\n    initializeComponentRef(_this);\n    _this.state = {};\n    _this._defaultCalloutProps = {\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n      directionalHint: DirectionalHint.rightCenter\n    };\n    return _this;\n  }\n\n  TeachingBubbleBase.prototype.focus = function () {\n    if (this.rootElement.current) {\n      this.rootElement.current.focus();\n    }\n  };\n\n  TeachingBubbleBase.prototype.render = function () {\n    var _a = this.props,\n        setCalloutProps = _a.calloutProps,\n        // eslint-disable-next-line deprecation/deprecation\n    targetElement = _a.targetElement,\n        onDismiss = _a.onDismiss,\n        // Default to deprecated value if provided.\n    // eslint-disable-next-line deprecation/deprecation\n    _b = _a.hasCloseButton,\n        // Default to deprecated value if provided.\n    // eslint-disable-next-line deprecation/deprecation\n    hasCloseButton = _b === void 0 ? this.props.hasCloseIcon : _b,\n        isWide = _a.isWide,\n        styles = _a.styles,\n        theme = _a.theme,\n        target = _a.target;\n\n    var calloutProps = __assign(__assign({}, this._defaultCalloutProps), setCalloutProps);\n\n    var stylesProps = {\n      theme: theme,\n      isWide: isWide,\n      calloutProps: __assign(__assign({}, calloutProps), {\n        theme: calloutProps.theme\n      }),\n      hasCloseButton: hasCloseButton\n    };\n    var classNames = getClassNames(styles, stylesProps);\n    var calloutStyles = classNames.subComponentStyles ? classNames.subComponentStyles.callout : undefined;\n    return React.createElement(Callout, __assign({\n      target: target || targetElement,\n      onDismiss: onDismiss\n    }, calloutProps, {\n      className: classNames.root,\n      styles: calloutStyles,\n      hideOverflow: true\n    }), React.createElement(\"div\", {\n      ref: this.rootElement\n    }, React.createElement(TeachingBubbleContent, __assign({}, this.props))));\n  };\n\n  TeachingBubbleBase.defaultProps = {\n    /**\n     * Default calloutProps is deprecated in favor of private `_defaultCalloutProps`.\n     * Remove in next release.\n     * @deprecated In favor of private `_defaultCalloutProps`.\n     */\n    // eslint-disable-next-line deprecation/deprecation\n    calloutProps: {\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false,\n      directionalHint: DirectionalHint.rightCenter\n    }\n  };\n  return TeachingBubbleBase;\n}(React.Component);\n\nexport { TeachingBubbleBase };","map":null,"metadata":{},"sourceType":"module"}