{"ast":null,"code":"import { hiddenContentStyle, getFocusStyle, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Facepile',\n  addButton: 'ms-Facepile-addButton ms-Facepile-itemButton',\n  descriptiveOverflowButton: 'ms-Facepile-descriptiveOverflowButton ms-Facepile-itemButton',\n  itemButton: 'ms-Facepile-itemButton ms-Facepile-person',\n  itemContainer: 'ms-Facepile-itemContainer',\n  members: 'ms-Facepile-members',\n  member: 'ms-Facepile-member',\n  overflowButton: 'ms-Facepile-overflowButton ms-Facepile-itemButton'\n};\nexport var styles = function styles(props) {\n  var className = props.className,\n      theme = props.theme,\n      _a = props.spacingAroundItemButton,\n      spacingAroundItemButton = _a === void 0 ? 2 : _a;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ItemButtonStyles = {\n    textAlign: 'center',\n    padding: 0,\n    borderRadius: '50%',\n    verticalAlign: 'top',\n    display: 'inline',\n    backgroundColor: 'transparent',\n    border: 'none',\n    selectors: {\n      '&::-moz-focus-inner': {\n        padding: 0,\n        border: 0\n      }\n    }\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      width: 'auto'\n    }, className],\n    addButton: [classNames.addButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.white,\n      backgroundColor: palette.themePrimary,\n      marginRight: spacingAroundItemButton * 2 + 'px',\n      selectors: {\n        '&:hover': {\n          backgroundColor: palette.themeDark\n        },\n        '&:focus': {\n          backgroundColor: palette.themeDark\n        },\n        '&:active': {\n          backgroundColor: palette.themeDarker\n        },\n        '&:disabled': {\n          backgroundColor: palette.neutralTertiaryAlt\n        }\n      }\n    }],\n    descriptiveOverflowButton: [classNames.descriptiveOverflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.small.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    itemButton: [classNames.itemButton, ItemButtonStyles],\n    itemContainer: [classNames.itemContainer, {\n      display: 'flex'\n    }],\n    members: [classNames.members, {\n      display: 'flex',\n      overflow: 'hidden',\n      listStyleType: 'none',\n      padding: 0,\n      margin: \"-\" + spacingAroundItemButton + \"px\"\n    }],\n    member: [classNames.member, {\n      display: 'inline-flex',\n      flex: '0 0 auto',\n      margin: spacingAroundItemButton + \"px\"\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme, {\n      inset: -1\n    }), ItemButtonStyles, {\n      fontSize: fonts.medium.fontSize,\n      color: palette.neutralSecondary,\n      backgroundColor: palette.neutralLighter,\n      marginLeft: spacingAroundItemButton * 2 + \"px\"\n    }],\n    overflowInitialsIcon: [{\n      color: palette.neutralPrimary\n    }],\n    screenReaderOnly: hiddenContentStyle\n  };\n};","map":null,"metadata":{},"sourceType":"module"}