{"ast":null,"code":"import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-DetailsList',\n  compact: 'ms-DetailsList--Compact',\n  contentWrapper: 'ms-DetailsList-contentWrapper',\n  headerWrapper: 'ms-DetailsList-headerWrapper',\n  isFixed: 'is-fixed',\n  isHorizontalConstrained: 'is-horizontalConstrained',\n  listCell: 'ms-List-cell'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      className = props.className,\n      isHorizontalConstrained = props.isHorizontalConstrained,\n      compact = props.compact,\n      isFixed = props.isFixed;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.small, {\n      position: 'relative',\n      color: semanticColors.listText,\n      selectors: (_a = {}, _a[\"& .\" + classNames.listCell] = {\n        minHeight: 38,\n        wordBreak: 'break-word'\n      }, _a)\n    }, isFixed && classNames.isFixed, compact && [classNames.compact, {\n      selectors: (_b = {}, _b[\".\" + classNames.listCell] = {\n        minHeight: 32\n      }, _b)\n    }], isHorizontalConstrained && [classNames.isHorizontalConstrained, {\n      overflowX: 'auto',\n      overflowY: 'visible',\n      WebkitOverflowScrolling: 'touch'\n    }], className],\n    focusZone: [{\n      display: 'inline-block',\n      minWidth: '100%',\n      minHeight: 1\n    }],\n    headerWrapper: classNames.headerWrapper,\n    contentWrapper: classNames.contentWrapper\n  };\n};","map":null,"metadata":{},"sourceType":"module"}