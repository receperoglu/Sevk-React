{"ast":null,"code":"import _regeneratorRuntime from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/recep/Downloads/react-data-patterns-demo-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/recep/Downloads/react-data-patterns-demo-master/src/components/FetchData.js\";\nimport Component from 'react';\nexport var FetchData = /*#__PURE__*/function (_Component) {\n  _inherits(FetchData, _Component);\n\n  function FetchData(props) {\n    var _this;\n\n    _classCallCheck(this, FetchData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchData).call(this, props));\n    _this.state = {\n      claim: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(FetchData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.populateWeatherData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var contents = this.state.loading ? /*#__PURE__*/React.createElement(\"img\", {\n        src: LoadingImage,\n        alt: \"LoadingImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }) : FetchData.renderclaimTable(this.state.claim);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, contents);\n    }\n  }, {\n    key: \"populateWeatherData\",\n    value: function () {\n      var _populateWeatherData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('GetAllClaim');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context.sent;\n                this.setState({\n                  claim: data,\n                  loading: false\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function populateWeatherData() {\n        return _populateWeatherData.apply(this, arguments);\n      }\n\n      return populateWeatherData;\n    }()\n  }], [{\n    key: \"renderclaimTable\",\n    value: function renderclaimTable(claim) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        class: \"table table-hover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, \"No \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, \"Tarih\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, \"B\\xFCt\\xE7e\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, \"Durum\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        id: \"listteklif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, claim.map(function (claim) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: claim.id,\n          \"data-id\": claim.id,\n          \"data-statu\": claim.status,\n          class: \"talep detay \",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, claim.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 48\n          }\n        }, claim.createdDate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }, claim.amount), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 52\n          }\n        }, function () {\n          var claimstatus = claim.status;\n\n          switch (claimstatus) {\n            case 0:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-info\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 52\n                }\n              }, \"Onay Bekliyor\");\n              ;\n              break;\n\n            case 1:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-info\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 52\n                }\n              }, \"Yay\\u0131nda\");\n              break;\n\n            case 2:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-warning\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 52\n                }\n              }, \"Haz\\u0131rlan\\u0131yor\");\n              break;\n\n            case 3:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-success\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 52\n                }\n              }, \"\\xD6deme Yap\\u0131n\\u0131z\");\n              break;\n\n            case 5:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-success\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 52\n                }\n              }, \"\\xD6deme Onayland\\u0131\");\n              break;\n\n            case 6:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-success\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 52\n                }\n              }, \"Al\\u0131nacak Hizmet\");\n              break;\n\n            case 7:\n              return /*#__PURE__*/React.createElement(\"div\", {\n                className: \"btn btn-success\",\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 52\n                }\n              }, \"Al\\u0131nan Hizmet\");\n              break;\n\n            default:\n              return \"Neither\";\n          }\n        }(), \" \"));\n      }))));\n    }\n  }]);\n\n  return FetchData;\n}(Component);\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["/Users/recep/Downloads/react-data-patterns-demo-master/src/components/FetchData.js"],"names":["Component","FetchData","props","state","claim","loading","populateWeatherData","contents","LoadingImage","renderclaimTable","fetch","response","json","data","setState","map","id","status","createdDate","amount","claimstatus","displayName","name"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,OAAtB;AAEG,WAAaC,SAAb;AAAA;;AAGC,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAb;AAFe;AAGlB;;AANF;AAAA;AAAA,wCAQqB;AAChB,WAAKC,mBAAL;AACH;AAVF;AAAA;AAAA,6BAkEU;AACL,UAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWE,OAAX,gBACT;AAAK,QAAA,GAAG,EAAEG,YAAV;AAAwB,QAAA,GAAG,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS,GAETP,SAAS,CAACQ,gBAAV,CAA2B,KAAKN,KAAL,CAAWC,KAAtC,CAFN;AAIA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,QADL,CADJ;AAKH;AA5EF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+E4BG,KAAK,CAAC,aAAD,CA/EjC;;AAAA;AA+EWC,gBAAAA,QA/EX;AAAA;AAAA,uBAgFwBA,QAAQ,CAACC,IAAT,EAhFxB;;AAAA;AAgFWC,gBAAAA,IAhFX;AAiFK,qBAAKC,QAAL,CAAc;AAAEV,kBAAAA,KAAK,EAAES,IAAT;AAAeR,kBAAAA,OAAO,EAAE;AAAxB,iBAAd;;AAjFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qCAayBD,KAbzB,EAagC;AAAA;;AAC3B,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ;AAAO,QAAA,KAAK,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ,CADJ,eASI;AAAO,QAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACW,GAAN,CAAU,UAAAX,KAAK;AAAA,4BACZ;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACY,EAAf;AAAmB,qBAASZ,KAAK,CAACY,EAAlC;AAAsC,wBAAYZ,KAAK,CAACa,MAAxD;AAAgE,UAAA,KAAK,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKb,KAAK,CAACY,EAAX,CADJ,eACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKZ,KAAK,CAACc,WAAX,CADvB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKd,KAAK,CAACe,MAAX,CAFJ,eAE2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACjB,YAAM;AACJ,cAAIC,WAAW,GAAGhB,KAAK,CAACa,MAAxB;;AACA,kBAAQG,WAAR;AACI,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAAyD;AACzD;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACA;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAP;AACA;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAP;AACA;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP;AACA;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAP;AACA;;AACJ,iBAAK,CAAL;AACI,kCAAO;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACA;;AACJ;AACI,qBAAO,SAAP;AAvBR;AA0BH,SA5BA,EADkB,MAF3B,CADY;AAAA,OAAf,CADL,CATJ,CADI,CAAR;AAiDH;AA/DF;;AAAA;AAAA,EAA+BpB,SAA/B;AAAaC,S,CACLoB,W,GAAcpB,SAAS,CAACqB,I","sourcesContent":["import Component from 'react';\n \n   export class FetchData extends Component {\n    static displayName = FetchData.name;\n\n    constructor(props) {\n        super(props);\n        this.state = { claim: [], loading: true };\n    }\n\n    componentDidMount() {\n        this.populateWeatherData();\n    }\n\n\n    static renderclaimTable(claim) {\n        return (<div>\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>No </th>\n                        <th>Tarih</th>\n                        <th>Bütçe</th>\n                        <th>Durum</th>\n                    </tr>\n                </thead>\n                <tbody id=\"listteklif\">\n                    {claim.map(claim =>\n                        <tr key={claim.id} data-id={claim.id} data-statu={claim.status} class=\"talep detay \">\n                            <td>{claim.id}</td><td>{claim.createdDate}</td>\n                            <td>{claim.amount}</td><td>  \n                                {(() => {\n                                    let claimstatus = claim.status;\n                                    switch (claimstatus) {\n                                        case 0:\n                                            return <div className=\"btn btn-info\">Onay Bekliyor</div>;;\n                                            break;\n                                        case 1:\n                                            return <div className=\"btn btn-info\">Yayında</div>;\n                                            break;\n                                        case 2:\n                                            return <div className=\"btn btn-warning\">Hazırlanıyor</div>;\n                                            break;\n                                        case 3:\n                                            return <div className=\"btn btn-success\">Ödeme Yapınız</div>;\n                                            break;\n                                        case 5:\n                                            return <div className=\"btn btn-success\">Ödeme Onaylandı</div>;\n                                            break;\n                                        case 6:\n                                            return <div className=\"btn btn-success\">Alınacak Hizmet</div>;\n                                            break;\n                                        case 7:\n                                            return <div className=\"btn btn-success\">Alınan Hizmet</div>;\n                                            break;\n                                        default:\n                                            return \"Neither\";\n                                    }\n\n                                })()} </td></tr>)}\n                </tbody>\n            </table>\n\n        </div>\n        );\n    }\n\n\n    render() {\n        let contents = this.state.loading\n            ? <img src={LoadingImage} alt=\"LoadingImage\" />\n            : FetchData.renderclaimTable(this.state.claim);\n\n        return (\n            <div>\n                {contents}\n            </div>\n        );\n    }\n\n    async populateWeatherData() {\n        const response = await fetch('GetAllClaim');\n        const data = await response.json();\n        this.setState({ claim: data, loading: false });\n    }\n}"]},"metadata":{},"sourceType":"module"}