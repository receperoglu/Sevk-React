{"ast":null,"code":"import * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function TagItemBase(props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    \"data-selection-index\": index,\n    \"data-is-focusable\": (enableTagFocusInDisabledPicker || !disabled) && true\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    \"aria-label\": title,\n    title: title\n  }, children), React.createElement(IconButton, {\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel\n  }));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":null,"metadata":{},"sourceType":"module"}