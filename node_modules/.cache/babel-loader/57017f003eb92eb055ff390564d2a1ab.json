{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n\n    warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n\n  Button.prototype.render = function () {\n    var props = this.props; // eslint-disable-next-line deprecation/deprecation\n\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return React.createElement(ActionButton, __assign({}, props));\n\n      case ButtonType.compound:\n        return React.createElement(CompoundButton, __assign({}, props));\n\n      case ButtonType.icon:\n        return React.createElement(IconButton, __assign({}, props));\n\n      case ButtonType.primary:\n        return React.createElement(PrimaryButton, __assign({}, props));\n\n      default:\n        return React.createElement(DefaultButton, __assign({}, props));\n    }\n  };\n\n  return Button;\n}(React.Component);\n\nexport { Button };","map":null,"metadata":{},"sourceType":"module"}