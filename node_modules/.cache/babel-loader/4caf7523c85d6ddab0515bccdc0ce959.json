{"ast":null,"code":"import { DefaultPalette } from './colors/index';\nimport { DefaultEffects } from './effects/index';\nimport { DefaultFontStyles } from './fonts/index';\nimport { mergeThemes } from './mergeThemes';\nimport { DefaultSpacing } from './spacing/index';\nimport { makeSemanticColors } from './utilities/makeSemanticColors';\n/**\n * Creates a custom theme definition.\n * @param theme - Partial theme object.\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\n\nexport function createTheme(theme, depComments) {\n  if (theme === void 0) {\n    theme = {};\n  }\n\n  if (depComments === void 0) {\n    depComments = false;\n  }\n\n  var isInverted = !!theme.isInverted;\n  var baseTheme = {\n    palette: DefaultPalette,\n    effects: DefaultEffects,\n    fonts: DefaultFontStyles,\n    spacing: DefaultSpacing,\n    isInverted: isInverted,\n    disableGlobalClassNames: false,\n    semanticColors: makeSemanticColors(DefaultPalette, DefaultEffects, undefined, isInverted, depComments),\n    rtl: undefined\n  };\n  return mergeThemes(baseTheme, theme);\n}","map":null,"metadata":{},"sourceType":"module"}